name: "CI/CD"
env:
  CACHE_ID: tc-271022-1
  CARGO_TERM_COLOR: always
  HOME: /root
  MAINNET: ${{github.base_ref == 'mainnet' && '1' || ''}}
  SOLANA_HYDRA_LIQUIDITY_POOLS_PROGRAM_ID_KEY: ${{ github.base_ref == 'mainnet' && secrets.SOLANA_HYDRA_LIQUIDITY_POOLS_PROGRAM_ID_KEY || '' }}

on:
  push:
    branches:
      - devnet
      - mainnet
  pull_request:
    branches:
      - devnet
      - mainnet

concurrency:
  group: ci-tests-${{ github.head_ref || github.run_id }}-1
  cancel-in-progress: true

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hydraswap-io/hydraswap-ci:0.0.24
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_READ_TOKEN }}

    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup

      - run: yarn ci:lint
      - run: yarn ci:build

      - uses: ./.github/actions/save-compiled

      - uses: ./.github/actions/notify-slack
        with:
          JOB_NAME: COMPILATION
          SLACK_NOTIFICATIONS_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}

  unit:
    name: Unit
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hydraswap-io/hydraswap-ci:0.0.24
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_READ_TOKEN }}
    needs:
      - compile
    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup

      - run: yarn ci:unit

      - uses: ./.github/actions/notify-slack
        with:
          JOB_NAME: UNIT
          SLACK_NOTIFICATIONS_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}

  integration:
    name: Integration
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hydraswap-io/hydraswap-ci:0.0.24
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_READ_TOKEN }}
    needs:
      - compile
    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup
      - uses: ./.github/actions/load-built-core

      - run: yarn ci:integration

      - uses: ./.github/actions/notify-slack
        with:
          JOB_NAME: INTEGRATION
          SLACK_NOTIFICATIONS_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}

  e2e-swap:
    name: E2E swap tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hydraswap-io/hydraswap-ci:0.0.24
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_READ_TOKEN }}
    needs:
      - compile
    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup
      - uses: ./.github/actions/load-built-core
      - uses: ./.github/actions/load-built-frontend

      - run: yarn ci:e2e-swap

      - uses: ./.github/actions/notify-slack
        with:
          JOB_NAME: E2E-SWAP
          SLACK_NOTIFICATIONS_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}

  e2e-pool:
    name: E2E pools tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hydraswap-io/hydraswap-ci:0.0.24
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_READ_TOKEN }}
    needs:
      - compile
    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup
      - uses: ./.github/actions/load-built-core
      - uses: ./.github/actions/load-built-frontend

      - run: yarn ci:e2e-pools

      - uses: ./.github/actions/notify-slack
        with:
          JOB_NAME: E2E-POOLS
          SLACK_NOTIFICATIONS_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}

  security:
    name: Soteria
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hydraswap-io/hydraswap-ci:0.0.24
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_READ_TOKEN }}

    needs:
      - compile
    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: ./.github/actions/load-built-core

      - run: yarn ci:config-bpf
      - run: echo "~/.soteria/soteria-linux-develop/bin" >> $GITHUB_PATH
      - run: yarn ci:soteria

      - uses: ./.github/actions/notify-slack
        with:
          JOB_NAME: CODE-AUDIT
          SLACK_NOTIFICATIONS_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}

  deploy-docs:
    name: Deploy Docs
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hydraswap-io/hydraswap-ci:0.0.24
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_READ_TOKEN }}
    needs:
      - compile
    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup

      - run: yarn ci:build-docs

      - uses: ./.github/actions/deploy-docs
        with:
          PINATA_KEY: ${{ secrets.PINATA_KEY }}
          PINATA_SECRET: ${{ secrets.PINATA_SECRET }}
          FLEEK_API_KEY: ${{ secrets.FLEEK_API_KEY }}

      - uses: ./.github/actions/notify-slack-latest-test-dev
        with:
          SLACK_NOTIFICATIONS_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}

  deploy-frontend:
    name: Deploy FE
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hydraswap-io/hydraswap-ci:0.0.24
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_READ_TOKEN }}

    needs:
      - compile
    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: ./.github/actions/load-built-frontend

      - uses: ./.github/actions/deploy-frontend
        with:
          PINATA_KEY: ${{ secrets.PINATA_KEY }}
          PINATA_SECRET: ${{ secrets.PINATA_SECRET }}
          FLEEK_API_KEY: ${{ secrets.FLEEK_API_KEY }}

      - uses: ./.github/actions/notify-slack-latest-test-dev
        with:
          SLACK_NOTIFICATIONS_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}

  deploy-devnet:
    name: Deploy BE
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hydraswap-io/hydraswap-ci:0.0.24
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_READ_TOKEN }}

    env:
      SOLANA_DEPLOY_KEY: ${{ secrets.SOLANA_DEPLOY_KEY }}
    needs:
      - deploy-frontend
      - security
      - unit
      - integration
      - e2e-swap
      - e2e-pool

    if: github.ref == 'refs/heads/devnet'
    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup
      - uses: ./.github/actions/load-built-core
      - uses: ./.github/actions/load-built-frontend

      - run: yarn ci:deploy-devnet

      - uses: ./.github/actions/notify-slack
        with:
          JOB_NAME: CONTRACT-DEPLOY-SUCCESS
          SLACK_NOTIFICATIONS_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
